---
version: '3.3'
networks:
  default_net:
    external: true

services:
  # Deploy the consul server instances
  server:
    image: consul:latest
    networks:
      default_net:
        aliases:
          - consul-server.${PRIVATE_HOSTED_ZONE}
    environment:
      - 'CONSUL_LOCAL_CONFIG={
            "acl_datacenter":"${REGION}",
            "acl_master_token":"${MASTER_TOKEN}",
            "acl_default_policy": "deny",
            "acl_down_policy": "extend-cache",
            "acl_agent_token":"${MASTER_TOKEN}",
            "leave_on_terminate" : true,
            "server_name" : "server.${REGION}.consul",
            "skip_leave_on_interrupt" : true,
            "autopilot": {
              "cleanup_dead_servers": true
            },
            "disable_update_check": true,
            "key_file":"/consul/certs/privkey.pem",
            "cert_file":"/consul/certs/cert.pem",
            "ca_file":"/consul/certs/fullchain.pem",
            "ports":{
              "http":8501,
              "https":8500
            },
            "verify_incoming": true,
            "verify_outgoing": true
          }'
    command: 
      - "agent"
      - "-server"
      - "-advertise={{ GetInterfaceIP \"eth0\" }}"
      - "-bind={{ GetInterfaceIP \"eth0\" }}"
      - "-bootstrap-expect=${MANAGER_COUNT}"
      - "-client=0.0.0.0"
      - "-data-dir=/consul/data"
      - "-datacenter=${REGION}"
      - "-encrypt=${ENCRYPTION_TOKEN}"
      - "-retry-join=consul-server.${PRIVATE_HOSTED_ZONE}"
      - "-log-level=info"
      - "-ui"
    # Mount the data volumes to the container.
    volumes:
      - type: bind
        source: /home/docker/consul/data
        target: /consul/data
      - type: bind
        source: /home/docker/consul/certs
        target: /consul/certs
    ports:
      - mode: host
        target: 8500
        published: 8500
        protocol: tcp
    # Deploy the consul server on all servers which are managers.
    # Use DNS Round Robin instead VIP for discovery. This ensures we get all running
    # consul server instances when querying consul.server
    deploy:
      mode: global
      endpoint_mode: dnsrr
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
      restart_policy:
        condition: any
        delay: 5s
        window: 240s
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.backend=consul.server
        - traefik.docker.network=default_net
        - traefik.frontend.rule=Host:consul-ui.${TLD}
        - traefik.enable=true
        - traefik.port=8500
        - traefik.protocol=https
